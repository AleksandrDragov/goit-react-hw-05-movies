{"version":3,"file":"static/js/196.c247e243.chunk.js","mappings":"sNAEaA,EAAYC,EAAAA,EAAAA,GAAH,iGAOTC,EAAYD,EAAAA,EAAAA,GAAH,0E,UCqCtB,EA1CmB,SAAC,GAAgB,IAAdE,EAAa,EAAbA,OACdC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,8BACGF,IACC,SAACH,EAAD,UACGG,EAAOG,KAAI,SAAAC,GACV,OACE,SAACL,EAAD,WACE,UAAC,KAAD,CAAMM,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAMP,GAAhD,WACE,gBACEQ,IACEL,EAAMM,YAAN,yCACsCN,EAAMM,aACxC,+EAENC,IAAG,UAAKP,EAAMQ,OAASR,EAAMS,gBAC7BC,MAAO,OAET,uBAAIV,EAAMQ,OAASR,EAAMS,qBAXbT,EAAME,GAezB,OAKV,C,iMC/BDS,EAAAA,EAAAA,SAAAA,QAAyB,6BAEzB,IAAMC,EAAU,mCAEVC,EAAmB,mCAAG,oGACHF,EAAAA,EAAAA,IAAA,wCAA2CC,IADxC,cACpBE,EADoB,yBAEnBA,EAASC,MAFU,2CAAH,qDAKnBC,EAAkB,mCAAG,WAAMC,GAAN,uFACFN,EAAAA,EAAAA,IAAA,mBACTM,EADS,oBACWL,EADX,oBADE,cACnBE,EADmB,yBAIlBA,EAASC,MAJS,2CAAH,sDAOlBG,EAAS,mCAAG,WAAMD,GAAN,uFACON,EAAAA,EAAAA,IAAA,kBACVM,EADU,4BACkBL,EADlB,oBADP,cACVE,EADU,yBAITA,EAASC,MAJA,2CAAH,sDAOTI,EAAgB,mCAAG,WAAMF,GAAN,uFACAN,EAAAA,EAAAA,IAAA,kBACVM,EADU,4BACkBL,EADlB,2BADA,cACjBE,EADiB,yBAIhBA,EAASC,MAJO,2CAAH,sDAOhBK,EAAgB,mCAAG,WAAMC,GAAN,uFACAV,EAAAA,EAAAA,IAAA,iCACKC,EADL,kBACsBS,EADtB,+CADA,cACjBP,EADiB,yBAIhBA,EAASC,MAJO,2CAAH,qD,wJC9BTO,E,QAAgB5B,EAAAA,GAAH,sE,UC6B1B,EA3BiB,WACf,OAA4B6B,EAAAA,EAAAA,UAAS,MAArC,eAAO3B,EAAP,KAAe4B,EAAf,KACA,GAA0BD,EAAAA,EAAAA,UAAS,IAAnC,eAAOE,EAAP,KAAcC,EAAd,KAcA,OAZAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAa,mCAAG,8GAEWf,EAAAA,EAAAA,MAFX,OAEZgB,EAFY,OAGlBL,EAAUK,EAAeC,SAHP,gDAKlBJ,EAAS,KAAMK,SALG,yDAAH,qDAQnBH,GACD,GAAE,KAGD,iCACE,SAACN,EAAD,WACE,6CAEDG,IAAS,yBAAMA,IACf7B,IAAU,SAACoC,EAAA,EAAD,CAAYpC,OAAQA,MAGpC,C","sources":["components/MoviesList/MoviesList.styles.jsx","components/MoviesList/MoviesList.jsx","fetch/FetchApi.jsx","pages/Home.styles.jsx","pages/Home.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const MovieList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  list-style: none;\n  gap: 10px;\n`;\n\nexport const MovieItem = styled.li`\n  max-width: min-content;\n  text-align: center;\n`;\n","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { MovieList, MovieItem } from './MoviesList.styles';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <>\n      {movies && (\n        <MovieList>\n          {movies.map(movie => {\n            return (\n              <MovieItem key={movie.id}>\n                <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n                  <img\n                    src={\n                      movie.poster_path\n                        ? `https://image.tmdb.org/t/p/w500${movie.poster_path}`\n                        : 'https://avatanplus.com/files/resources/original/59b50c9b407de15e6b393e80.jpg'\n                    }\n                    alt={`${movie.title && movie.original_title}`}\n                    width={200}\n                  />\n                  <p>{movie.title && movie.original_title}</p>\n                </Link>\n              </MovieItem>\n            );\n          })}\n        </MovieList>\n      )}\n    </>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      poster_path: PropTypes.string.isRequired,\n      title: PropTypes.string.isRequired,\n      original_title: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nexport default MoviesList;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org';\n\nconst API_KEY = '41b8f9437bf3f899281f8a3f9bdc0891';\n\nconst fetchTrandingMovies = async () => {\n  const response = await axios.get(`/3/trending/movie/day?api_key=${API_KEY}`);\n  return response.data;\n};\n\nconst fetchMoviesDetails = async moviesId => {\n  const response = await axios.get(\n    `/3/movie/${moviesId}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nconst fetchCast = async moviesId => {\n  const response = await axios.get(\n    `3/movie/${moviesId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nconst fetchMovieReview = async moviesId => {\n  const response = await axios.get(\n    `3/movie/${moviesId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data;\n};\n\nconst fetchSearchMovie = async query => {\n  const response = await axios.get(\n    `3/search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=1&include_adult=false`\n  );\n  return response.data;\n};\n\nexport {\n  fetchTrandingMovies,\n  fetchMoviesDetails,\n  fetchCast,\n  fetchMovieReview,\n  fetchSearchMovie,\n};\n","import styled from '@emotion/styled';\n\nexport const TrendingToday = styled.h1`\n  display: flex;\n  justify-content: center;\n`;\n","import { useEffect, useState } from 'react';\nimport { fetchTrandingMovies } from 'fetch/FetchApi';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport { TrendingToday } from './Home.styles';\nconst HomePage = () => {\n  const [movies, setMovies] = useState(null);\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    const onFetchMovies = async () => {\n      try {\n        const trandingMovies = await fetchTrandingMovies();\n        setMovies(trandingMovies.results);\n      } catch (error) {\n        setError(error.message);\n      }\n    };\n    onFetchMovies();\n  }, []);\n\n  return (\n    <>\n      <TrendingToday>\n        <h1>Trending today</h1>\n      </TrendingToday>\n      {error && <div>{error}</div>}\n      {movies && <MoviesList movies={movies} />}\n    </>\n  );\n};\n\nexport default HomePage;\n"],"names":["MovieList","styled","MovieItem","movies","location","useLocation","map","movie","to","id","state","from","src","poster_path","alt","title","original_title","width","axios","API_KEY","fetchTrandingMovies","response","data","fetchMoviesDetails","moviesId","fetchCast","fetchMovieReview","fetchSearchMovie","query","TrendingToday","useState","setMovies","error","setError","useEffect","onFetchMovies","trandingMovies","results","message","MoviesList"],"sourceRoot":""}